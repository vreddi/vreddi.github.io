{"version":3,"sources":["assets/videoplayback.mp4","assets/profile.jpg","assets/microsoft.png","assets/uiuc.png","assets/mufc.png","assets/seattleskyline.png","components/videoCover/VideoCover.js","components/contentArea/ContentArea.js","components/profileAvatar/ProfileAvatar.js","components/profileAvatarContainer/ProfileAvatarContainer.js","components/tabContainer/TabContainer.js","components/innerContentArea/InnerContentArea.js","components/descriptionSection/DescriptionSection.js","components/descriptionSectionRow/DescriptionSectionRow.js","components/footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","VideoCover","props","react_default","a","createElement","id","playsInline","autoPlay","muted","loop","src","coverVideo","type","ContentArea","className","children","ProfileAvatar","image","alt","name","tag","ProfileAvatarContainer","TabContainer","InnerContentArea","DescriptionSection","DescriptionSectionRow","title","target","href","link","rel","themeTitle","titleEnding","Footer","seattleImg","App","components_videoCover_VideoCover","components_contentArea_ContentArea","components_profileAvatarContainer_ProfileAvatarContainer","components_profileAvatar_ProfileAvatar","profileImg","components_tabContainer_TabContainer","components_innerContentArea_InnerContentArea","components_descriptionSection_DescriptionSection","components_descriptionSectionRow_DescriptionSectionRow","microsoftImg","uiucImg","mufcImg","components_footer_Footer","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,2DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,kDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,kDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+aCWzBC,EAPI,SAACC,GAAD,OACjBC,EAAAC,EAAAC,cAAA,SAAOC,GAAG,QAAQC,aAAW,EAACC,UAAQ,EAACC,OAAK,EAACC,MAAI,GAC/CP,EAAAC,EAAAC,cAAA,UAAQM,IAAKC,EAAYC,KAAK,gBCGnBC,SANK,SAACZ,GAAD,OAClBC,EAAAC,EAAAC,cAAA,OAAKU,UAAU,eACZb,EAAMc,YCaIC,SAfO,SAACf,GAAD,OACpBC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OACEU,UAAU,gBACVJ,IAAKT,EAAMgB,MACXC,IAAI,mBAGNhB,EAAAC,EAAAC,cAAA,OAAKU,UAAU,eACbZ,EAAAC,EAAAC,cAAA,OAAKU,UAAU,oBAAoBb,EAAMkB,MACzCjB,EAAAC,EAAAC,cAAA,OAAKU,UAAU,mBAAmBb,EAAMmB,SCJ/BC,SANgB,SAACpB,GAAD,OAC7BC,EAAAC,EAAAC,cAAA,OAAKU,UAAU,0BACZb,EAAMc,yCCIIO,SANM,SAACrB,GAAD,OACnBC,EAAAC,EAAAC,cAAA,OAAKU,UAAU,gBACZb,EAAMc,YCIIQ,SANU,SAACtB,GAAD,OACvBC,EAAAC,EAAAC,cAAA,OAAKU,UAAU,oBACZb,EAAMc,YCIIS,SANY,SAACvB,GAAD,OACzBC,EAAAC,EAAAC,cAAA,OAAKU,UAAU,sBACZb,EAAMc,YCaIU,SAfe,SAACxB,GAAD,OAC5BC,EAAAC,EAAAC,cAAA,QAAMU,UAAU,yBACbb,EAAMyB,MAAQ,IACfxB,EAAAC,EAAAC,cAAA,KACEuB,OAAO,SACPC,KAAM3B,EAAM4B,KACZC,IAAI,uBAEH7B,EAAM8B,WAAa,KAEtB7B,EAAAC,EAAAC,cAAA,OAAKM,IAAKT,EAAMgB,MAAOC,IAAKjB,EAAM8B,aACjC9B,EAAM+B,YAAc,IAAM/B,EAAM+B,YAAc,sBCJpCC,EANA,kBACb/B,EAAAC,EAAAC,cAAA,OAAKU,UAAU,UACbZ,EAAAC,EAAAC,cAAA,OAAKc,IAAI,UAAUR,IAAKwB,MCwDbC,mLA3CX,OACEjC,EAAAC,EAAAC,cAAA,OAAKU,UAAU,OACbZ,EAAAC,EAAAC,cAACgC,EAAD,MACAlC,EAAAC,EAAAC,cAACiC,EAAD,KACEnC,EAAAC,EAAAC,cAACkC,EAAD,KACEpC,EAAAC,EAAAC,cAACmC,EAAD,CACEtB,MAAOuB,EACPrB,KAAK,gBACLC,IAAI,mBAGRlB,EAAAC,EAAAC,cAACqC,EAAD,MACAvC,EAAAC,EAAAC,cAACsC,EAAD,KACExC,EAAAC,EAAAC,cAACuC,EAAD,KACEzC,EAAAC,EAAAC,cAACwC,EAAD,CACElB,MAAM,wBACNK,WAAW,aACXF,KAAK,wBACLZ,MAAO4B,IAET3C,EAAAC,EAAAC,cAACwC,EAAD,CACElB,MAAM,mBACNK,WAAW,QACXF,KAAK,oCACLZ,MAAO6B,EACPd,YAAY,SAEd9B,EAAAC,EAAAC,cAACwC,EAAD,CACElB,MAAM,oBACNK,WAAW,aACXF,KAAK,wCACLZ,MAAO8B,EACPf,YAAY,iBAKpB9B,EAAAC,EAAAC,cAAC4C,EAAD,cAvCUC,aCLEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOtD,EAAAC,EAAAC,cAACqD,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.3c2055ed.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/videoplayback.627f1820.mp4\";","module.exports = __webpack_public_path__ + \"static/media/profile.8f424cc4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/microsoft.b3bdc343.png\";","module.exports = __webpack_public_path__ + \"static/media/uiuc.2926464a.png\";","module.exports = __webpack_public_path__ + \"static/media/mufc.259569e3.png\";","module.exports = __webpack_public_path__ + \"static/media/seattleskyline.94aaa4c1.png\";","import React from 'react';\nimport './VideoCover.css';\nimport * as coverVideo from './../../assets/videoplayback.mp4';\n\nconst VideoCover = (props) => (\n  <video id=\"bgvid\" playsInline autoPlay muted loop>\n    <source src={coverVideo} type=\"video/mp4\" />\n  </video>\n\n);\n\nexport default VideoCover;\n","import React from 'react';\nimport './ContentArea.css';\n\nconst ContentArea = (props) => (\n  <div className=\"contentArea\">\n    {props.children}\n  </div>\n);\n\nexport default ContentArea;\n","import React from 'react';\nimport './ProfileAvatar.css';\n\nconst ProfileAvatar = (props) => (\n  <div>\n    <img\n      className=\"profileAvatar\"\n      src={props.image}\n      alt=\"Profile Avatar\"\n    >\n    </img>\n    <div className=\"nameSection\">\n      <div className=\"nameSection-name\">{props.name}</div>\n      <div className=\"nameSection-tag\">{props.tag}</div>\n    </div>\n  </div>\n);\n\nexport default ProfileAvatar;\n","import React from 'react';\nimport './ProfileAvatarContainer.css';\n\nconst ProfileAvatarContainer = (props) => (\n  <div className=\"profileAvatarContainer\">\n    {props.children}\n  </div>\n);\n\nexport default ProfileAvatarContainer;\n","import React from 'react';\nimport './TabContainer.css';\n\nconst TabContainer = (props) => (\n  <div className=\"tabContainer\">\n    {props.children}\n  </div>\n);\n\nexport default TabContainer;\n","import React from 'react';\nimport './InnerContentArea.css';\n\nconst InnerContentArea = (props) => (\n  <div className=\"innerContentArea\">\n    {props.children}\n  </div>\n);\n\nexport default InnerContentArea;\n","import React from 'react';\nimport './DescriptionSection.css';\n\nconst DescriptionSection = (props) => (\n  <div className=\"descriptionSection\">\n    {props.children}\n  </div>\n);\n\nexport default DescriptionSection;","import React from 'react';\nimport './DescriptionSectionRow.css';\n\nconst DescriptionSectionRow = (props) => (\n  <span className=\"descriptionSectionRow\">\n    {props.title + ' '}\n    <a\n      target=\"_blank\"\n      href={props.link}\n      rel=\"noopener noreferrer\"\n    >\n      {props.themeTitle + ' '}\n    </a>\n    <img src={props.image} alt={props.themeTitle} />\n    {props.titleEnding ? ' ' + props.titleEnding : ''}\n  </span>\n);\n\nexport default DescriptionSectionRow;\n","import React from 'react';\nimport './Footer.css';\nimport * as seattleImg from '../../assets/seattleskyline.png';\n\nconst Footer = () => (\n  <div className=\"footer\">\n    <img alt=\"Seattle\" src={seattleImg} />\n  </div>\n);\n\nexport default Footer;\n","import React, { Component } from 'react';\n//import logo from './logo.svg';\nimport './App.css';\nimport VideoCover from './components/videoCover/VideoCover';\nimport ContentArea from './components/contentArea/ContentArea';\nimport ProfileAvatar from './components/profileAvatar/ProfileAvatar';\nimport ProfileAvatarContainer from './components/profileAvatarContainer/ProfileAvatarContainer';\nimport * as profileImg from './assets/profile.jpg';\nimport * as microsoftImg from './assets/microsoft.png';\nimport * as uiucImg from './assets/uiuc.png';\nimport * as mufcImg from './assets/mufc.png';\nimport TabContainer from './components/tabContainer/TabContainer';\nimport InnerContentArea from './components/innerContentArea/InnerContentArea';\nimport DescriptionSection from './components/descriptionSection/DescriptionSection';\nimport DescriptionSectionRow from './components/descriptionSectionRow/DescriptionSectionRow';\nimport Footer from './components/footer/Footer';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <VideoCover />\n        <ContentArea>\n          <ProfileAvatarContainer>\n            <ProfileAvatar \n              image={profileImg}\n              name=\"Vishrut Reddi\"\n              tag=\"@vishrutreddi\"\n            />\n          </ProfileAvatarContainer>\n          <TabContainer />\n          <InnerContentArea>\n            <DescriptionSection>\n              <DescriptionSectionRow\n                title=\"Software Engineer II \"\n                themeTitle=\"@Microsoft\"\n                link=\"https://microsoft.com\"\n                image={microsoftImg}\n              />\n              <DescriptionSectionRow\n                title=\"Computer Science\"\n                themeTitle=\"#UIUC\"\n                link=\"https://twitter.com/Illinois_Alma\"\n                image={uiucImg}\n                titleEnding=\"Grad\"\n              />\n              <DescriptionSectionRow\n                title=\"Manchester United\"\n                themeTitle=\"#RedDevils\"\n                link=\"https://twitter.com/hashtag/RedDevils\"\n                image={mufcImg}\n                titleEnding=\"Supporter\"\n              />\n            </DescriptionSection>\n          </InnerContentArea>\n        </ContentArea>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}